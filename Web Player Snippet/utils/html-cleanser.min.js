/**
 *  * @module @graficos/html-cleanser
 * @version 1.2.3
 * Minified by Harole (https://github.com/HaroleDev) using JavaScript Minify Tool (https://github.com/do-community/minify-tool) with Terser 5.14.2
 * @license
 * Copyright (c) 2020 Paul Melero
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
 const e=["script","img","a","object","iframe","embed","input","textarea","button","link","style","base"],r=/(datasrc="?(.*?)"?)>/gi,a=/(use="?(.*?)"?)>/gi,i=/(src="?(.*?)"?)>/gi,t=/<\s?\/?\s?([a-z0-9]*)\b[^>]*\s?>?/gi,c=new RegExp(`(${[/<!--[\s\S]*?-->/gi,/javascript:\/\*-->/gi,/Set\.constructor`/gi,/<\?xml/gi,/url\s?\(.*?\)/gi,/document\.write/gi].map((({source:e})=>e)).join("|")})`,"gi");export const cleanHTML=(s,o="<i><em><span><p>")=>{if(!s)return"";if(e.some((e=>o.includes(`<${e}>`))))throw new Error("Disallowed tags: "+o);o=((o+"").toLowerCase().match(/<[a-z0-9]+>/g)||[]).join("");let l=s;for(l=l.replace(/<$/,"");;){const e=l;if(l=e.replace(c,"").replace(r,((e,r)=>e.replace(r,""))).replace(i,((e,r)=>e.replace(r,""))).replace(a,((e,r)=>e.replace(r,""))).replace(t,((e,r)=>o.includes(`<${r.toLowerCase()}>`)?e:"")),e===l)return l}};